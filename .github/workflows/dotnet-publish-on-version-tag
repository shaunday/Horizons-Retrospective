name: Dotnet Build & Publish on Version Tag

on:
  push:
    tags:
      - 'v*'               # Trigger on any tag starting with 'v'
    paths:
      - "AssetsFlow.Server/**"
      - "/Common.Net/HsR.UserService/**"
  workflow_dispatch:

jobs:
  Build-Test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - solution-path: ./AssetsFlow.Server
            project-filepath: ./AssetsFlow.Server/AssetsFlow.Web.API/AssetsFlowWeb.API.csproj
            build-docker: true
            image-name: assetsflow-backend
          - solution-path: ./Common.Net/HsR.UserService
            project-filepath: ./Common.Net/HsR.UserService/HsR.UserService/HsR.UserService.csproj
            build-docker: true
            image-name: userservice-backend

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check if files changed
        id: check_changes
        run: |
          if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -q "${{ matrix.solution-path }}"; then
            echo "should_build=true" >> $GITHUB_OUTPUT
          else
            echo "should_build=false" >> $GITHUB_OUTPUT
          fi

      - name: Fetch Git tags
        if: steps.check_changes.outputs.should_build == 'true'
        run: git fetch --tags --force

      - name: .NET Build Composite
        if: steps.check_changes.outputs.should_build == 'true'
        uses: ./.github/actions/common-build-steps-dotnet
        with:
          solution-path: ${{ matrix.solution-path }}

      - name: Publish
        if: steps.check_changes.outputs.should_build == 'true'
        run: dotnet publish -c Release -r linux-x64 -o ./publish ${{ matrix.project-filepath }}

      - name: Set up Docker Buildx
        if: steps.check_changes.outputs.should_build == 'true'
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        if: steps.check_changes.outputs.should_build == 'true'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set version and timestamp separately
        if: steps.check_changes.outputs.should_build == 'true'
        id: set_version
        run: |
          TIMESTAMP=$(TZ="Asia/Jerusalem" date --iso-8601=seconds)
      
          if [[ "${{ github.ref_type }}" == "tag" ]]; then
            VERSION="${{ github.ref_name }}"
          else
            VERSION="v${TIMESTAMP}"
          fi
      
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "TIMESTAMP=$TIMESTAMP" >> $GITHUB_ENV
      
          echo "Version: $VERSION"
          echo "Timestamp: $TIMESTAMP"

      - name: Build and Push Docker image
        if: steps.check_changes.outputs.should_build == 'true'
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ${{ matrix.solution-path }}/app/Dockerfile
          push: true
          build-args: |
            VERSION=${{ env.VERSION }}
            COMMIT_SHA=${{ github.sha }}
            BUILD_TIMESTAMP=${{ env.TIMESTAMP }}
          tags: |
            ghcr.io/shaunday/horizons-retrospective/${{ matrix.image-name }}:${{ env.VERSION }}
            ghcr.io/shaunday/horizons-retrospective/${{ matrix.image-name }}:latest
