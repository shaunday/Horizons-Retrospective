events {}

http {
    include mime.types;
    default_type application/octet-stream;

    # Redirect HTTP to HTTPS
    server {
        listen 80;
        server_name api.mywebthings.xyz;

        location / {
            return 301 https://$host$request_uri;
        }
    }

    # HTTPS server block
    server {
        listen 443 ssl;
        server_name api.mywebthings.xyz;

        # SSL configuration
        ssl_certificate /etc/ssl/certs/server.crt; # Path to your SSL certificate
        ssl_certificate_key /etc/ssl/certs/server.key; # Path to your SSL private key

        # Secure SSL configurations
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256:TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384';

        location /api/ {
            proxy_pass http://web:80;  # Proxy to your web service
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection keep-alive;
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Allow CORS response headers for all requests
            add_header 'Access-Control-Allow-Origin' 'http://mywebthings.xyz' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
        }
    }
}