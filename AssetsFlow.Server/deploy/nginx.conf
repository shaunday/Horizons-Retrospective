events {}

http {
    include mime.types;
    default_type application/octet-stream;

    server {
        listen 80;
        server_name api.mywebthings.xyz;

        # Handle preflight CORS OPTIONS requests
        location /api/ {
            if ($request_method = OPTIONS ) {
                add_header 'Access-Control-Allow-Origin' 'http://mywebthings.xyz';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
                add_header 'Access-Control-Allow-Headers' 'Authorization,Content-Type';
                add_header 'Access-Control-Allow-Credentials' 'true';
                add_header 'Content-Length' 0;
                add_header 'Content-Type' 'text/plain';
                return 204;
            }

            # Proxy the actual requests
            proxy_pass http://web:80;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection keep-alive;
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Allow CORS response headers for all requests
            add_header 'Access-Control-Allow-Origin' 'http://mywebthings.xyz' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
        }
    }
}