// <auto-generated />
using System;
using System.Collections.Generic;
using System.Reflection;
using JTA.Journal.Entities;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#pragma warning disable 219, 612, 618
#nullable disable

namespace JTA.Infrastructure.JTA.Journal.Repository.CompiledModels
{
    [EntityFrameworkInternal]
    public partial class JournalDataEntityType
    {
        public static RuntimeEntityType Create(RuntimeModel model, RuntimeEntityType baseEntityType = null)
        {
            var runtimeEntityType = model.AddEntityType(
                "JTA.Journal.Entities.JournalData",
                typeof(JournalData),
                baseEntityType,
                propertyCount: 2);

            var savedBrokers = runtimeEntityType.AddProperty(
                "SavedBrokers",
                typeof(List<string>),
                propertyInfo: typeof(JournalData).GetProperty("SavedBrokers", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(JournalData).GetField("<SavedBrokers>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            savedBrokers.AddAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.None);
            savedBrokers.AddAnnotation("Relational:ColumnType", "jsonb");

            var savedSectors = runtimeEntityType.AddProperty(
                "SavedSectors",
                typeof(List<string>),
                propertyInfo: typeof(JournalData).GetProperty("SavedSectors", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(JournalData).GetField("<SavedSectors>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            savedSectors.AddAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.None);
            savedSectors.AddAnnotation("Relational:ColumnType", "jsonb");

            return runtimeEntityType;
        }

        public static void CreateAnnotations(RuntimeEntityType runtimeEntityType)
        {
            runtimeEntityType.AddAnnotation("Relational:FunctionName", null);
            runtimeEntityType.AddAnnotation("Relational:Schema", null);
            runtimeEntityType.AddAnnotation("Relational:SqlQuery", null);
            runtimeEntityType.AddAnnotation("Relational:TableName", "JournalData");
            runtimeEntityType.AddAnnotation("Relational:ViewName", null);
            runtimeEntityType.AddAnnotation("Relational:ViewSchema", null);

            Customize(runtimeEntityType);
        }

        static partial void Customize(RuntimeEntityType runtimeEntityType);
    }
}
